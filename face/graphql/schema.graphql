input AnalyseSentenceAndPhraseInput {
  """Book author"""
  bookAuthor: String

  """Book name"""
  bookName: String

  """Context"""
  context: String!

  """Phrase"""
  phrase: String!

  """Sentence"""
  sentence: String!
}

type BookChapterLiteOutModel {
  bookId: Int!
  header: String
  id: Int!
  name: String
  note: String
}

type BookChapterOutModel {
  book: BookLiteOutModel!
  content: String
  header: String
  id: Int!
  name: String
  note: String
}

type BookLiteOutModel {
  author: String
  id: Int!
  name: String
  note: String
  userId: Int!
}

type BookOutModel {
  author: String
  chapters: [BookChapterLiteOutModel!]!
  id: Int!
  name: String
  note: String
  userId: Int!
}

input CheckTranslationInput {
  """Sentence in English"""
  engSentence: String!

  """Sentence in Russian"""
  rusSentence: String!
}

type CheckTranslationOutErrorModel {
  error: String!
}

union CheckTranslationOutModel = CheckTranslationOutErrorModel | CheckTranslationOutSuccessModel

type CheckTranslationOutSuccessModel {
  analysis: String!
  correct: Boolean!
}

input ConfirmEmailInput {
  """User email"""
  code: String!
}

input CreateBookChapterInput {
  """Book id"""
  bookId: Int!

  """Content of the chapter"""
  content: String

  """Header on the chapter"""
  header: String

  """Name on the chapter (chapter 1)"""
  name: String

  """Note about this chapter"""
  note: String
}

input CreateBookInput {
  """Author"""
  author: String

  """Name"""
  name: String

  """Note"""
  note: String
}

input DeleteBookChapterInput {
  """BookChapter id"""
  id: Int!
}

input DeleteBookInput {
  """Book id"""
  id: Int!
}

input GetBookChapterInput {
  """BookChapter id"""
  id: Int!
}

input GetTranscriptionInput {
  """Sentence in English"""
  engSentence: String!
}

type GetTranscriptionOutErrorModel {
  error: String!
}

union GetTranscriptionOutModel = GetTranscriptionOutErrorModel | GetTranscriptionOutSuccessModel

type GetTranscriptionOutSuccessModel {
  transcription: String!
}

input LoginInput {
  """User email"""
  email: String!

  """User password"""
  password: String!
}

input LoginWithOAuthInput {
  """Code to get user data from OAuth provider"""
  code: String!

  """Provider type: github, google, yandex"""
  providerType: String!
}

type Mutation {
  """Email confirmation"""
  auth_confirmEmail(input: ConfirmEmailInput!): Boolean!

  """User login"""
  auth_login(input: LoginInput!): UserOutModel!

  """User login with OAuth"""
  auth_login_with_OAuth(input: LoginWithOAuthInput!): UserOutModel!

  """Current user logout"""
  auth_logout: Boolean!

  """
  Register a user.
  	Possible errors:
  	**Почта зарегистрирована, но не подтверждена.** — the user is already registered, but doesn't confirm his email.
  	**Почта уже зарегистрирована.** — the user is already registered and confirmed his email.
  """
  auth_register(input: RegisterUserInput!): UserOutModel!

  """Resend email confirmation letter"""
  auth_resendConfirmationEmail(input: ResendConfirmationEmailInput!): Boolean!

  """Create book chapter"""
  book_chapter_create(input: CreateBookChapterInput!): BookChapterOutModel!

  """Delete book chapter"""
  book_chapter_delete(input: DeleteBookChapterInput!): Boolean!

  """Update book chapter"""
  book_chapter_update(input: UpdateBookChapterInput!): BookChapterOutModel!

  """Create book"""
  book_create(input: CreateBookInput!): BookOutModel!

  """Delete user book"""
  book_delete(input: DeleteBookInput!): Boolean!

  """Update user book"""
  book_update(input: UpdateBookInput!): BookOutModel!

  """Top up a balance with YooKassa"""
  payment_yookassa_top_up_balance(input: TopUpBalanceWithYooKassaInput!): TopUpBalanceWithYooKassaOutModel!
}

type Query {
  ai_AnalyseSentenceAndPhrase(input: AnalyseSentenceAndPhraseInput!): SentenceAndPhraseAnalysesOutModel!
  ai_checkTranslation(input: CheckTranslationInput!): CheckTranslationOutModel!
  ai_getTranscription(input: GetTranscriptionInput!): GetTranscriptionOutModel!

  """Get current user data"""
  auth_getMe: UserOutModel!

  """Get book chapter"""
  book_chapter_get(input: GetBookChapterInput!): BookChapterOutModel!

  """Get user books"""
  book_user_books: [BookOutModel!]!
}

input RegisterUserInput {
  """User email"""
  email: String!

  """User password"""
  password: String!
}

input ResendConfirmationEmailInput {
  """User email"""
  email: String!
}

type SentenceAndPhraseAnalysesOutModel {
  id: Int!
  sentenceTranslation: String!
}

input TopUpBalanceWithYooKassaInput {
  """Money amount"""
  amount: Float!
}

type TopUpBalanceWithYooKassaOutModel {
  confirmationUrl: String!
}

input UpdateBookChapterInput {
  """BookChapter content"""
  content: String

  """Should a program convert the content into a structure?"""
  convertContentIntoStructure: Boolean

  """BookChapter header"""
  header: String

  """BookChapter id"""
  id: Int!

  """BookChapter name (chapter 1)"""
  name: String

  """BookChapter note"""
  note: String
}

input UpdateBookInput {
  """Author"""
  author: String

  """Book id"""
  id: Int!

  """Name"""
  name: String

  """Note"""
  note: String
}

type UserOutModel {
  balance: Int!
  email: String!
  id: Int!
  isUserConfirmed: Boolean!
}