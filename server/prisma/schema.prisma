generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
}

model User {
    id                                      Int                  @id @default(autoincrement())
    email                                   String               @unique
    password                                String?
    email_confirmation_code                 String?
    email_confirmation_code_expiration_date String?
    is_email_confirmed                      Boolean              @default(false)
    is_user_confirmed                       Boolean              @default(false)
    balance                                 Int                  @default(0)
    created_at                              DateTime             @default(now())
    Payment                                 Payment[]
    BalanceTransaction                      BalanceTransaction[]
}

model Payment {
    id            Int                 @id @default(autoincrement())
    user          User                @relation(fields: [user_id], references: [id])
    user_id       Int
    amount        Int
    status        PaymentStatus       @default(PENDING)
    provider_name PaymentProviderName @default(YOOKASSA)
    external_id   String              @unique
    created_at    DateTime            @default(now())
    updated_at    DateTime            @default(now())
}

model BalanceTransaction {
    id         Int                      @id @default(autoincrement())
    user       User                     @relation(fields: [user_id], references: [id])
    user_id    Int
    type       BalanceTransactionStatus
    amount     Int
    payment_id String?
    created_at DateTime                 @default(now())
}

enum PaymentStatus {
    PENDING
    SUCCESS
    FAILED
    CANCELED
}

enum PaymentProviderName {
    YOOKASSA
}

enum BalanceTransactionStatus {
    CREDIT
    DEBIT
}
